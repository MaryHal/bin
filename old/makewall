#!/usr/bin/env python

import os
import sys
import random

from optparse import OptionParser

def getRandomFile(dir):
    return random.choice(os.listdir(dir))

def executeCommand(fake, command):
    if fake:
        print ("\t" + command)
    else:
        os.system(command)

if __name__ == "__main__":
    wallpaperDir = "/mnt/shared/wallpapers/"
    monitorCount = 1
    monitors = ["1280x800"]

    usage = "usage:   %prog [options] monitor1 monitor2 ..\ndefault: %prog -m \"1280x800\" " 
    parser = OptionParser(usage=usage)
    parser.add_option("-m", action="store", type="int", dest="monitors", help="number of monitors for the wallpaper to span.")
    parser.add_option("-f", "--fake", action="store_true", dest="fake", help="don't actually create the wallpaper, but print the commands used.")

    (options, args) = parser.parse_args()

    if options.monitors != None:
        monitorCount = options.monitors
        monitors = args
        while len(monitors) < monitorCount:
            monitors.append("1280x800")

    images   = []
    for x in range(0, monitorCount):
        images.append(wallpaperDir + getRandomFile(wallpaperDir))
        print ("resizing %s to %s." % (images[x], monitors[x]))

        executeCommand(options.fake, "convert %s -resize %s^ -gravity Center -crop %s+0+0 +repage /tmp/%d" % (images[x], monitors[x], monitors[x], x ))

    fileString = ''
    for x in range(0, monitorCount):
        fileString += '/tmp/%d ' % x

    print ("creating wallpaper.")
    executeCommand(options.fake, "convert +append %s /home/sanford/tmp/current.png" % fileString)

    print ("setting wallpaper.")
    executeCommand(options.fake, "feh --bg-center /home/sanford/tmp/current.png")

    for x in range(0, monitorCount):
        executeCommand(options.fake, "rm /tmp/%d" % x)

