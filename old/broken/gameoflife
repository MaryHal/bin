#!/usr/bin/env python

import sys
import copy
import random
import time

random.seed()

class gameoflife:
    def __init__(self, width, height):
        self.board = []
        for i in range(width):
            col = []
            for j in range(height):
                col.append(random.randint(0, 1))
            self.board.append(col)
        self.width = width
        self.height = height
        self.futureboard = copy.deepcopy(self.board)

    def checkpoint(self, x, y):
        if x < 0 or x >= self.width or y < 0 or y >= self.height:
            return 0
        return self.board[x][y]

    # returns the amount of neighbors that are checked given a point
    def neighbors(self, x, y):
        xlist = [x - 1, x, x + 1]
        ylist = [y - 1, y, y + 1]
        total = 0
        for i in range(len(xlist)):
            for j in range(len(ylist)):
                if xlist[i] != x or ylist[j] != y:
                    total += self.checkpoint(xlist[i], ylist[j])
        return total

    def run(self):
        for i in range(self.height):
            for j in range(self.width):
                numNeighbors = self.neighbors(j, i)
                self.futureboard[j][i] = 0
                if numNeighbors == 3:
                    self.futureboard[j][i] = 1
                if numNeighbors == 2 and self.board[j][i] == 1:
                    self.futureboard[j][i] = 1

        # print board
        for i in range(self.height):
            for j in range(self.width):
                #print self.board[j][i],
                if self.board[j][i] == 0:
                    print (0,)
                else:
                    print (' ',)
            print

        self.board = copy.deepcopy(self.futureboard)

width = 50
height = 50
if len(sys.argv) > 2:
    width = int(sys.argv[1])
    height = int(sys.argv[2])

test = gameoflife(width, height) 
while 1 == 1:
    test.run()
    print
    #time.sleep(0.2)
